/* Problem:
          Given string of "UUDDUUD" where u is up and d is down, determine how many valleys exist in the string
*/

//Solution:
#include <bits/stdc++.h>

using namespace std;

// Complete the countingValleys function below.
int countingValleys(int n, string s) {
    int elevation = 0;
    int valley = 0;

    for (int i = 0; i< s.length()+1; i++){
        if (i > 0){
            if ((s[i-1] == 'U') && (elevation == 0)){
                valley += 1;
            }
            if (s[i] == 'D'){
                    elevation -= 1;
                    
                }
            else if (s[i] == 'U'){
                    elevation += 1;
                }
        }
        else{
            if (s[i] == 'D'){
                    elevation -= 1;
                  
            }
            else{
                    elevation += 1;
            }
        }
    }
    return valley;

}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    string s;
    getline(cin, s);

    int result = countingValleys(n, s);

    fout << result << "\n";

    fout.close();

    return 0;
}
