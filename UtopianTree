/*Problem:
          Given number of cycles figure out end height if in spring cycle it doubles and summer only does +1
*/

//Solution:
#include <bits/stdc++.h>

using namespace std;

// Complete the utopianTree function below.
int utopianTree(int n) {
    int h = 0;
    for (int i =0; i<=n; i++){
        if (i == 0){
            h+=1;
        }
        else if(i%2 != 0){
            h = h*2;
        }
        else{
            h+=1;
        }
    }
   return h;
    

}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int t;
    cin >> t;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    for (int t_itr = 0; t_itr < t; t_itr++) {
        int n;
        cin >> n;
        cin.ignore(numeric_limits<streamsize>::max(), '\n');

        int result = utopianTree(n);
        fout << result << "\n";
    }

    fout.close();

    return 0;
}
